{"pageProps":{"post":{"attributes":{},"html":"<p>We&#39;re going to send celebration emails every time your</p>\n<p>Make a new directory in your src directory called <code>email</code>. In there put this index.ts</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Resend</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;resend&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> resend = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Resend</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">RESEND_API_KEY</span>);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> resend;\n</code></pre><p>Now create in the same directory celebration-email.ts</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> resend <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/email&quot;</span>;\n<span class=\"hljs-keyword\">import</span> db <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/db&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { usersSync } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;drizzle-orm/neon&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { articles } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/db/schema&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { eq } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;drizzle-orm&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">sendCelebrationEmail</span>(<span class=\"hljs-params\">\n  <span class=\"hljs-attr\">articleId</span>: <span class=\"hljs-built_in\">number</span>,\n  <span class=\"hljs-attr\">pageviews</span>: <span class=\"hljs-built_in\">number</span>\n</span>) {\n  <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> db\n    .<span class=\"hljs-title function_\">select</span>({\n      <span class=\"hljs-attr\">email</span>: usersSync.<span class=\"hljs-property\">email</span>,\n      <span class=\"hljs-attr\">id</span>: usersSync.<span class=\"hljs-property\">id</span>,\n    })\n    .<span class=\"hljs-title function_\">from</span>(articles)\n    .<span class=\"hljs-title function_\">leftJoin</span>(usersSync, <span class=\"hljs-title function_\">eq</span>(articles.<span class=\"hljs-property\">authorId</span>, usersSync.<span class=\"hljs-property\">id</span>))\n    .<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-title function_\">eq</span>(articles.<span class=\"hljs-property\">id</span>, articleId));\n\n  <span class=\"hljs-keyword\">const</span> { email, id } = response[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">if</span> (!email) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n      <span class=\"hljs-string\">`‚ùå skipping sending a celebration for getting <span class=\"hljs-subst\">${pageviews}</span> on article <span class=\"hljs-subst\">${articleId}</span>, could not find email`</span>\n    );\n    <span class=\"hljs-keyword\">return</span>;\n  }\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(email);\n\n  <span class=\"hljs-comment\">// OPTION 1: this only works if you&#x27;ve set up your own custom domain on Resend like I have</span>\n  <span class=\"hljs-keyword\">const</span> emailRes = <span class=\"hljs-keyword\">await</span> resend.<span class=\"hljs-property\">emails</span>.<span class=\"hljs-title function_\">send</span>({\n    <span class=\"hljs-attr\">from</span>: <span class=\"hljs-string\">&quot;Wikimasters &lt;noreply@mail.holt.courses&gt;&quot;</span>, <span class=\"hljs-comment\">// should be your domain</span>\n    <span class=\"hljs-attr\">to</span>: email,\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">`‚ú® You article got <span class=\"hljs-subst\">${pageviews}</span> views! ‚ú®`</span>,\n    <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">&quot;&lt;h1&gt;Congrats!&lt;/h1&gt;&lt;p&gt;You&#x27;re an amazing author!&lt;/p&gt;&quot;</span>,\n  });\n\n  <span class=\"hljs-comment\">// OPTION 2: If you haven&#x27;t set up a custom domain (development/testing)</span>\n  <span class=\"hljs-comment\">// Uncomment this and comment out Option 1:</span>\n  <span class=\"hljs-comment\">//   const emailRes = await resend.emails.send({</span>\n  <span class=\"hljs-comment\">//     from: &quot;Wikimasters &lt;onboarding@resend.dev&gt;&quot;, // I believe it only lets you send from Resend if you haven&#x27;t set up your domain</span>\n  <span class=\"hljs-comment\">//     to: &quot;&lt;the email you signed up with&gt;&quot;, // unless you set up your own domain, you can only email yourself</span>\n  <span class=\"hljs-comment\">//     subject: `‚ú® You article got ${pageviews} views! ‚ú®`,</span>\n  <span class=\"hljs-comment\">//     html: &quot;&lt;h1&gt;Congrats!&lt;/h1&gt;&lt;p&gt;You&#x27;re an amazing author!&lt;/p&gt;&quot;,</span>\n  <span class=\"hljs-comment\">//   });</span>\n\n  <span class=\"hljs-keyword\">if</span> (!emailRes.<span class=\"hljs-property\">error</span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n      <span class=\"hljs-string\">`üìß sent <span class=\"hljs-subst\">${id}</span> a celebration for getting <span class=\"hljs-subst\">${pageviews}</span> on article <span class=\"hljs-subst\">${articleId}</span>`</span>\n    );\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n      <span class=\"hljs-string\">`‚ùå error sending <span class=\"hljs-subst\">${id}</span> a celebration for getting <span class=\"hljs-subst\">${pageviews}</span> on article <span class=\"hljs-subst\">${articleId}</span>`</span>,\n      emailRes.<span class=\"hljs-property\">error</span>\n    );\n  }\n}\n</code></pre><ul>\n<li>Take note that you use the correct version - Resend restricts a lot until you set up your domain with Resend</li>\n<li>Otherwise this is pretty straightforward - more than email ever was!</li>\n<li>I&#39;m in the habit of not logging emails to the logs for GDPR reasons, hence the ID instead of the email</li>\n<li>Obviously we&#39;d want a more interesting email for this, but marketing isn&#39;t the point of this lesson.</li>\n</ul>\n<p>Let&#39;s go make this work by adding it to pageviews.ts action.</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// at top</span>\n<span class=\"hljs-keyword\">import</span> sendCelebrationEmail <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/email/celebration-email&quot;</span>;\n<span class=\"hljs-keyword\">const</span> milestones = [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">10000</span>];\n\n<span class=\"hljs-comment\">// under newVal declaration</span>\n<span class=\"hljs-keyword\">if</span> (milestones.<span class=\"hljs-title function_\">includes</span>(newVal)) {\n  <span class=\"hljs-title function_\">sendCelebrationEmail</span>(articleId, +newVal); <span class=\"hljs-comment\">// don&#x27;t await so we don&#x27;t block on sending the email, just send it</span>\n}\n</code></pre><p>That&#39;s it!</p>\n","markdown":"We're going to send celebration emails every time your\n\nMake a new directory in your src directory called `email`. In there put this index.ts\n\n```typescript\nimport { Resend } from \"resend\";\n\nconst resend = new Resend(process.env.RESEND_API_KEY);\n\nexport default resend;\n```\n\nNow create in the same directory celebration-email.ts\n\n```typescript\nimport resend from \"@/email\";\nimport db from \"@/db\";\nimport { usersSync } from \"drizzle-orm/neon\";\nimport { articles } from \"@/db/schema\";\nimport { eq } from \"drizzle-orm\";\n\nexport default async function sendCelebrationEmail(\n  articleId: number,\n  pageviews: number\n) {\n  const response = await db\n    .select({\n      email: usersSync.email,\n      id: usersSync.id,\n    })\n    .from(articles)\n    .leftJoin(usersSync, eq(articles.authorId, usersSync.id))\n    .where(eq(articles.id, articleId));\n\n  const { email, id } = response[0];\n  if (!email) {\n    console.log(\n      `‚ùå skipping sending a celebration for getting ${pageviews} on article ${articleId}, could not find email`\n    );\n    return;\n  }\n\n  console.log(email);\n\n  // OPTION 1: this only works if you've set up your own custom domain on Resend like I have\n  const emailRes = await resend.emails.send({\n    from: \"Wikimasters <noreply@mail.holt.courses>\", // should be your domain\n    to: email,\n    subject: `‚ú® You article got ${pageviews} views! ‚ú®`,\n    html: \"<h1>Congrats!</h1><p>You're an amazing author!</p>\",\n  });\n\n  // OPTION 2: If you haven't set up a custom domain (development/testing)\n  // Uncomment this and comment out Option 1:\n  //   const emailRes = await resend.emails.send({\n  //     from: \"Wikimasters <onboarding@resend.dev>\", // I believe it only lets you send from Resend if you haven't set up your domain\n  //     to: \"<the email you signed up with>\", // unless you set up your own domain, you can only email yourself\n  //     subject: `‚ú® You article got ${pageviews} views! ‚ú®`,\n  //     html: \"<h1>Congrats!</h1><p>You're an amazing author!</p>\",\n  //   });\n\n  if (!emailRes.error) {\n    console.log(\n      `üìß sent ${id} a celebration for getting ${pageviews} on article ${articleId}`\n    );\n  } else {\n    console.log(\n      `‚ùå error sending ${id} a celebration for getting ${pageviews} on article ${articleId}`,\n      emailRes.error\n    );\n  }\n}\n```\n\n- Take note that you use the correct version - Resend restricts a lot until you set up your domain with Resend\n- Otherwise this is pretty straightforward - more than email ever was!\n- I'm in the habit of not logging emails to the logs for GDPR reasons, hence the ID instead of the email\n- Obviously we'd want a more interesting email for this, but marketing isn't the point of this lesson.\n\nLet's go make this work by adding it to pageviews.ts action.\n\n```typescript\n// at top\nimport sendCelebrationEmail from \"@/email/celebration-email\";\nconst milestones = [10, 50, 100, 1000, 10000];\n\n// under newVal declaration\nif (milestones.includes(newVal)) {\n  sendCelebrationEmail(articleId, +newVal); // don't await so we don't block on sending the email, just send it\n}\n```\n\nThat's it!\n","slug":"send-emails-to-users","title":"Send Emails to Users","section":"Email","icon":"envelope","filePath":"/home/runner/work/build-a-fullstack-nextjs-app-v4/build-a-fullstack-nextjs-app-v4/lessons/07-email/B-send-emails-to-users.md","nextSlug":"/lessons/email/react-email","prevSlug":"/lessons/email/resend"}},"__N_SSG":true}